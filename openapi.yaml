openapi: 3.0.3
info:
  title: AWS Cloud Developer App
  version: 1.0.0
tags:
  - name: Product Service
    description: Get products
  - name: Import Service
    description: Import products
paths:
  /products:
    servers:
      - url: https://1uakb21nm6.execute-api.us-east-1.amazonaws.com/prod
        description: "PRODUCT SERVICE"
    get:
      tags:
        - Product Service
      summary: "Get products"
      description: "Get all available products"
      operationId: getProductsList
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Failed to fetch data"
                items:
                  $ref: "#/components/schemas/ServerError"
    post:
      tags:
        - Product Service
      summary: "Create new products"
      description: "Create a new product"
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: "The new product"
                description: "The new product description"
                count: 10
                price: 5
              items:
                $ref: "#/components/schemas/CreateProduct"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Product created"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Price must be a number greater than or equal to 0.01"
                items:
                  $ref: "#/components/schemas/BadRequestError"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Failed to create an item"
                items:
                  $ref: "#/components/schemas/ServerError"
  /products/{productId}:
    servers:
      - url: https://1uakb21nm6.execute-api.us-east-1.amazonaws.com/prod
        description: "PRODUCT SERVICE"
    get:
      tags:
        - Product Service
      summary: "Get product by id"
      description: "Get product by id"
      operationId: getProductsById
      parameters:
        - name: productId
          in: path
          description: "Product Id to filter by"
          required: true
          schema:
            default: "af4b9141-84c0-41e5-b54e-0b70edb4d4cf"
            type: string
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                example:
                  id: "3316111c-0e1c-4b11-9d72-178b795bf5d1"
                  title: "The product"
                  description: "The description"
                  count: 1
                  price: 9
                items:
                  $ref: "#/components/schemas/Product"
        "404":
          description: "This product Id was not found"
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "This product Id was not found"
                items:
                  $ref: "#/components/schemas/NotFoundError"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Failed to fetch data"
                items:
                  $ref: "#/components/schemas/ServerError"
  /import:
    servers:
      - url: https://h0zihypq0i.execute-api.us-east-1.amazonaws.com/prod/
        description: "IMPORT SERVICE"
    get:
      tags:
        - Import Service
      summary: "Get signed URL"
      description: "Get signed URL for using it to upload products csv file"
      operationId: importProductsFile
      parameters:
        - name: name
          in: query
          description: "file name that is going to be uploaded"
          required: true
          schema:
            default: "products.csv"
            type: string
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                example:
                  url: "https://url"
                items:
                  $ref: "#/components/schemas/SignedURL"
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Failed to fetch data"
                items:
                  $ref: "#/components/schemas/ServerError"

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: "3316111c-0e1c-4b11-9d72-178b795bf5d1"
        price:
          type: integer
          format: int64
          example: 19
        count:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: "The description"
        title:
          type: string
          example: "The product"
    CreateProduct:
      type: object
      properties:
        price:
          type: integer
          format: int64
          example: 19
        count:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: "The description"
        title:
          type: string
          example: "The product"
    SignedURL:
      type: object
      properties:
        url:
          type: string
          example: "https://url"
    BadRequestError:
      type: object
      properties:
        message:
          type: string
          example: "Bad Request Error"
    NotFoundError:
      type: object
      properties:
        message:
          type: string
          example: "Not Found Error"
    ServerError:
      type: object
      properties:
        message:
          type: string
          example: "Server Error"
